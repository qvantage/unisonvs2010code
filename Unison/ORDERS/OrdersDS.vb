'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2443
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class OrdersDS
    Inherits DataSet
    
    Private tableOrders As OrdersDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Orders")) Is Nothing) Then
                Me.Tables.Add(New OrdersDataTable(ds.Tables("Orders")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Orders As OrdersDataTable
        Get
            Return Me.tableOrders
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As OrdersDS = CType(MyBase.Clone,OrdersDS)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("Orders")) Is Nothing) Then
            Me.Tables.Add(New OrdersDataTable(ds.Tables("Orders")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableOrders = CType(Me.Tables("Orders"),OrdersDataTable)
        If (Not (Me.tableOrders) Is Nothing) Then
            Me.tableOrders.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "OrdersDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/OrdersDS.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableOrders = New OrdersDataTable
        Me.Tables.Add(Me.tableOrders)
    End Sub
    
    Private Function ShouldSerializeOrders() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub OrdersRowChangeEventHandler(ByVal sender As Object, ByVal e As OrdersRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class OrdersDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnOrdersId As DataColumn
        
        Private columnCourierLabelID As DataColumn
        
        Private columnInvoice_No As DataColumn
        
        Private columnPUAddressID As DataColumn
        
        Private columnDLAddressID As DataColumn
        
        Private columnCOD As DataColumn
        
        Private columnFreightCollect As DataColumn
        
        Private columnNeedPricing As DataColumn
        
        Private columnOrderDate As DataColumn
        
        Private columnPUDate As DataColumn
        
        Private columnDLDate As DataColumn
        
        Private columnInsertDate As DataColumn
        
        Private columnUpdateDate As DataColumn
        
        Private columnCODAmount As DataColumn
        
        Private columnDeclaredValue As DataColumn
        
        Private columnTrackingNum As DataColumn
        
        Private columnOrderRef1 As DataColumn
        
        Private columnOrderRef2 As DataColumn
        
        Private columnOrderStatus As DataColumn
        
        Private columnStatusComment As DataColumn
        
        Private columnOrderOrigin As DataColumn
        
        Private columnCustomerID As DataColumn
        
        Private columnCustomerPO As DataColumn
        
        Private columnAuthorizedBy As DataColumn
        
        Private columnPULocationID As DataColumn
        
        Private columnPUName As DataColumn
        
        Private columnPUStreet As DataColumn
        
        Private columnPUAddress As DataColumn
        
        Private columnPUCity As DataColumn
        
        Private columnPUState As DataColumn
        
        Private columnPUZip As DataColumn
        
        Private columnPUContact As DataColumn
        
        Private columnPUAttn As DataColumn
        
        Private columnPURef1 As DataColumn
        
        Private columnPURef2 As DataColumn
        
        Private columnDLLocationID As DataColumn
        
        Private columnDLName As DataColumn
        
        Private columnDLStreet As DataColumn
        
        Private columnDLAddress As DataColumn
        
        Private columnDLCity As DataColumn
        
        Private columnDLState As DataColumn
        
        Private columnDLZip As DataColumn
        
        Private columnDLContact As DataColumn
        
        Private columnDLAttn As DataColumn
        
        Private columnDLRef1 As DataColumn
        
        Private columnDLRef2 As DataColumn
        
        Private columnInsertUserId As DataColumn
        
        Private columnUpdateUserId As DataColumn
        
        Friend Sub New()
            MyBase.New("Orders")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property OrdersIdColumn As DataColumn
            Get
                Return Me.columnOrdersId
            End Get
        End Property
        
        Friend ReadOnly Property CourierLabelIDColumn As DataColumn
            Get
                Return Me.columnCourierLabelID
            End Get
        End Property
        
        Friend ReadOnly Property Invoice_NoColumn As DataColumn
            Get
                Return Me.columnInvoice_No
            End Get
        End Property
        
        Friend ReadOnly Property PUAddressIDColumn As DataColumn
            Get
                Return Me.columnPUAddressID
            End Get
        End Property
        
        Friend ReadOnly Property DLAddressIDColumn As DataColumn
            Get
                Return Me.columnDLAddressID
            End Get
        End Property
        
        Friend ReadOnly Property CODColumn As DataColumn
            Get
                Return Me.columnCOD
            End Get
        End Property
        
        Friend ReadOnly Property FreightCollectColumn As DataColumn
            Get
                Return Me.columnFreightCollect
            End Get
        End Property
        
        Friend ReadOnly Property NeedPricingColumn As DataColumn
            Get
                Return Me.columnNeedPricing
            End Get
        End Property
        
        Friend ReadOnly Property OrderDateColumn As DataColumn
            Get
                Return Me.columnOrderDate
            End Get
        End Property
        
        Friend ReadOnly Property PUDateColumn As DataColumn
            Get
                Return Me.columnPUDate
            End Get
        End Property
        
        Friend ReadOnly Property DLDateColumn As DataColumn
            Get
                Return Me.columnDLDate
            End Get
        End Property
        
        Friend ReadOnly Property InsertDateColumn As DataColumn
            Get
                Return Me.columnInsertDate
            End Get
        End Property
        
        Friend ReadOnly Property UpdateDateColumn As DataColumn
            Get
                Return Me.columnUpdateDate
            End Get
        End Property
        
        Friend ReadOnly Property CODAmountColumn As DataColumn
            Get
                Return Me.columnCODAmount
            End Get
        End Property
        
        Friend ReadOnly Property DeclaredValueColumn As DataColumn
            Get
                Return Me.columnDeclaredValue
            End Get
        End Property
        
        Friend ReadOnly Property TrackingNumColumn As DataColumn
            Get
                Return Me.columnTrackingNum
            End Get
        End Property
        
        Friend ReadOnly Property OrderRef1Column As DataColumn
            Get
                Return Me.columnOrderRef1
            End Get
        End Property
        
        Friend ReadOnly Property OrderRef2Column As DataColumn
            Get
                Return Me.columnOrderRef2
            End Get
        End Property
        
        Friend ReadOnly Property OrderStatusColumn As DataColumn
            Get
                Return Me.columnOrderStatus
            End Get
        End Property
        
        Friend ReadOnly Property StatusCommentColumn As DataColumn
            Get
                Return Me.columnStatusComment
            End Get
        End Property
        
        Friend ReadOnly Property OrderOriginColumn As DataColumn
            Get
                Return Me.columnOrderOrigin
            End Get
        End Property
        
        Friend ReadOnly Property CustomerIDColumn As DataColumn
            Get
                Return Me.columnCustomerID
            End Get
        End Property
        
        Friend ReadOnly Property CustomerPOColumn As DataColumn
            Get
                Return Me.columnCustomerPO
            End Get
        End Property
        
        Friend ReadOnly Property AuthorizedByColumn As DataColumn
            Get
                Return Me.columnAuthorizedBy
            End Get
        End Property
        
        Friend ReadOnly Property PULocationIDColumn As DataColumn
            Get
                Return Me.columnPULocationID
            End Get
        End Property
        
        Friend ReadOnly Property PUNameColumn As DataColumn
            Get
                Return Me.columnPUName
            End Get
        End Property
        
        Friend ReadOnly Property PUStreetColumn As DataColumn
            Get
                Return Me.columnPUStreet
            End Get
        End Property
        
        Friend ReadOnly Property PUAddressColumn As DataColumn
            Get
                Return Me.columnPUAddress
            End Get
        End Property
        
        Friend ReadOnly Property PUCityColumn As DataColumn
            Get
                Return Me.columnPUCity
            End Get
        End Property
        
        Friend ReadOnly Property PUStateColumn As DataColumn
            Get
                Return Me.columnPUState
            End Get
        End Property
        
        Friend ReadOnly Property PUZipColumn As DataColumn
            Get
                Return Me.columnPUZip
            End Get
        End Property
        
        Friend ReadOnly Property PUContactColumn As DataColumn
            Get
                Return Me.columnPUContact
            End Get
        End Property
        
        Friend ReadOnly Property PUAttnColumn As DataColumn
            Get
                Return Me.columnPUAttn
            End Get
        End Property
        
        Friend ReadOnly Property PURef1Column As DataColumn
            Get
                Return Me.columnPURef1
            End Get
        End Property
        
        Friend ReadOnly Property PURef2Column As DataColumn
            Get
                Return Me.columnPURef2
            End Get
        End Property
        
        Friend ReadOnly Property DLLocationIDColumn As DataColumn
            Get
                Return Me.columnDLLocationID
            End Get
        End Property
        
        Friend ReadOnly Property DLNameColumn As DataColumn
            Get
                Return Me.columnDLName
            End Get
        End Property
        
        Friend ReadOnly Property DLStreetColumn As DataColumn
            Get
                Return Me.columnDLStreet
            End Get
        End Property
        
        Friend ReadOnly Property DLAddressColumn As DataColumn
            Get
                Return Me.columnDLAddress
            End Get
        End Property
        
        Friend ReadOnly Property DLCityColumn As DataColumn
            Get
                Return Me.columnDLCity
            End Get
        End Property
        
        Friend ReadOnly Property DLStateColumn As DataColumn
            Get
                Return Me.columnDLState
            End Get
        End Property
        
        Friend ReadOnly Property DLZipColumn As DataColumn
            Get
                Return Me.columnDLZip
            End Get
        End Property
        
        Friend ReadOnly Property DLContactColumn As DataColumn
            Get
                Return Me.columnDLContact
            End Get
        End Property
        
        Friend ReadOnly Property DLAttnColumn As DataColumn
            Get
                Return Me.columnDLAttn
            End Get
        End Property
        
        Friend ReadOnly Property DLRef1Column As DataColumn
            Get
                Return Me.columnDLRef1
            End Get
        End Property
        
        Friend ReadOnly Property DLRef2Column As DataColumn
            Get
                Return Me.columnDLRef2
            End Get
        End Property
        
        Friend ReadOnly Property InsertUserIdColumn As DataColumn
            Get
                Return Me.columnInsertUserId
            End Get
        End Property
        
        Friend ReadOnly Property UpdateUserIdColumn As DataColumn
            Get
                Return Me.columnUpdateUserId
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As OrdersRow
            Get
                Return CType(Me.Rows(index),OrdersRow)
            End Get
        End Property
        
        Public Event OrdersRowChanged As OrdersRowChangeEventHandler
        
        Public Event OrdersRowChanging As OrdersRowChangeEventHandler
        
        Public Event OrdersRowDeleted As OrdersRowChangeEventHandler
        
        Public Event OrdersRowDeleting As OrdersRowChangeEventHandler
        
        Public Overloads Sub AddOrdersRow(ByVal row As OrdersRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddOrdersRow( _
                    ByVal OrdersId As Integer,  _
                    ByVal CourierLabelID As Integer,  _
                    ByVal Invoice_No As Integer,  _
                    ByVal PUAddressID As Integer,  _
                    ByVal DLAddressID As Integer,  _
                    ByVal COD As Integer,  _
                    ByVal FreightCollect As Integer,  _
                    ByVal NeedPricing As Integer,  _
                    ByVal OrderDate As Date,  _
                    ByVal PUDate As Date,  _
                    ByVal DLDate As Date,  _
                    ByVal InsertDate As Date,  _
                    ByVal UpdateDate As Date,  _
                    ByVal CODAmount As Decimal,  _
                    ByVal DeclaredValue As Decimal,  _
                    ByVal TrackingNum As String,  _
                    ByVal OrderRef1 As String,  _
                    ByVal OrderRef2 As String,  _
                    ByVal OrderStatus As String,  _
                    ByVal StatusComment As String,  _
                    ByVal OrderOrigin As String,  _
                    ByVal CustomerID As String,  _
                    ByVal CustomerPO As String,  _
                    ByVal AuthorizedBy As String,  _
                    ByVal PULocationID As String,  _
                    ByVal PUName As String,  _
                    ByVal PUStreet As String,  _
                    ByVal PUAddress As String,  _
                    ByVal PUCity As String,  _
                    ByVal PUState As String,  _
                    ByVal PUZip As String,  _
                    ByVal PUContact As String,  _
                    ByVal PUAttn As String,  _
                    ByVal PURef1 As String,  _
                    ByVal PURef2 As String,  _
                    ByVal DLLocationID As String,  _
                    ByVal DLName As String,  _
                    ByVal DLStreet As String,  _
                    ByVal DLAddress As String,  _
                    ByVal DLCity As String,  _
                    ByVal DLState As String,  _
                    ByVal DLZip As String,  _
                    ByVal DLContact As String,  _
                    ByVal DLAttn As String,  _
                    ByVal DLRef1 As String,  _
                    ByVal DLRef2 As String,  _
                    ByVal InsertUserId As String,  _
                    ByVal UpdateUserId As String) As OrdersRow
            Dim rowOrdersRow As OrdersRow = CType(Me.NewRow,OrdersRow)
            rowOrdersRow.ItemArray = New Object() {OrdersId, CourierLabelID, Invoice_No, PUAddressID, DLAddressID, COD, FreightCollect, NeedPricing, OrderDate, PUDate, DLDate, InsertDate, UpdateDate, CODAmount, DeclaredValue, TrackingNum, OrderRef1, OrderRef2, OrderStatus, StatusComment, OrderOrigin, CustomerID, CustomerPO, AuthorizedBy, PULocationID, PUName, PUStreet, PUAddress, PUCity, PUState, PUZip, PUContact, PUAttn, PURef1, PURef2, DLLocationID, DLName, DLStreet, DLAddress, DLCity, DLState, DLZip, DLContact, DLAttn, DLRef1, DLRef2, InsertUserId, UpdateUserId}
            Me.Rows.Add(rowOrdersRow)
            Return rowOrdersRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As OrdersDataTable = CType(MyBase.Clone,OrdersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New OrdersDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnOrdersId = Me.Columns("OrdersId")
            Me.columnCourierLabelID = Me.Columns("CourierLabelID")
            Me.columnInvoice_No = Me.Columns("Invoice_No")
            Me.columnPUAddressID = Me.Columns("PUAddressID")
            Me.columnDLAddressID = Me.Columns("DLAddressID")
            Me.columnCOD = Me.Columns("COD")
            Me.columnFreightCollect = Me.Columns("FreightCollect")
            Me.columnNeedPricing = Me.Columns("NeedPricing")
            Me.columnOrderDate = Me.Columns("OrderDate")
            Me.columnPUDate = Me.Columns("PUDate")
            Me.columnDLDate = Me.Columns("DLDate")
            Me.columnInsertDate = Me.Columns("InsertDate")
            Me.columnUpdateDate = Me.Columns("UpdateDate")
            Me.columnCODAmount = Me.Columns("CODAmount")
            Me.columnDeclaredValue = Me.Columns("DeclaredValue")
            Me.columnTrackingNum = Me.Columns("TrackingNum")
            Me.columnOrderRef1 = Me.Columns("OrderRef1")
            Me.columnOrderRef2 = Me.Columns("OrderRef2")
            Me.columnOrderStatus = Me.Columns("OrderStatus")
            Me.columnStatusComment = Me.Columns("StatusComment")
            Me.columnOrderOrigin = Me.Columns("OrderOrigin")
            Me.columnCustomerID = Me.Columns("CustomerID")
            Me.columnCustomerPO = Me.Columns("CustomerPO")
            Me.columnAuthorizedBy = Me.Columns("AuthorizedBy")
            Me.columnPULocationID = Me.Columns("PULocationID")
            Me.columnPUName = Me.Columns("PUName")
            Me.columnPUStreet = Me.Columns("PUStreet")
            Me.columnPUAddress = Me.Columns("PUAddress")
            Me.columnPUCity = Me.Columns("PUCity")
            Me.columnPUState = Me.Columns("PUState")
            Me.columnPUZip = Me.Columns("PUZip")
            Me.columnPUContact = Me.Columns("PUContact")
            Me.columnPUAttn = Me.Columns("PUAttn")
            Me.columnPURef1 = Me.Columns("PURef1")
            Me.columnPURef2 = Me.Columns("PURef2")
            Me.columnDLLocationID = Me.Columns("DLLocationID")
            Me.columnDLName = Me.Columns("DLName")
            Me.columnDLStreet = Me.Columns("DLStreet")
            Me.columnDLAddress = Me.Columns("DLAddress")
            Me.columnDLCity = Me.Columns("DLCity")
            Me.columnDLState = Me.Columns("DLState")
            Me.columnDLZip = Me.Columns("DLZip")
            Me.columnDLContact = Me.Columns("DLContact")
            Me.columnDLAttn = Me.Columns("DLAttn")
            Me.columnDLRef1 = Me.Columns("DLRef1")
            Me.columnDLRef2 = Me.Columns("DLRef2")
            Me.columnInsertUserId = Me.Columns("InsertUserId")
            Me.columnUpdateUserId = Me.Columns("UpdateUserId")
        End Sub
        
        Private Sub InitClass()
            Me.columnOrdersId = New DataColumn("OrdersId", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrdersId)
            Me.columnCourierLabelID = New DataColumn("CourierLabelID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCourierLabelID)
            Me.columnInvoice_No = New DataColumn("Invoice_No", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnInvoice_No)
            Me.columnPUAddressID = New DataColumn("PUAddressID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUAddressID)
            Me.columnDLAddressID = New DataColumn("DLAddressID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLAddressID)
            Me.columnCOD = New DataColumn("COD", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCOD)
            Me.columnFreightCollect = New DataColumn("FreightCollect", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFreightCollect)
            Me.columnNeedPricing = New DataColumn("NeedPricing", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNeedPricing)
            Me.columnOrderDate = New DataColumn("OrderDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrderDate)
            Me.columnPUDate = New DataColumn("PUDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUDate)
            Me.columnDLDate = New DataColumn("DLDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLDate)
            Me.columnInsertDate = New DataColumn("InsertDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnInsertDate)
            Me.columnUpdateDate = New DataColumn("UpdateDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUpdateDate)
            Me.columnCODAmount = New DataColumn("CODAmount", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCODAmount)
            Me.columnDeclaredValue = New DataColumn("DeclaredValue", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDeclaredValue)
            Me.columnTrackingNum = New DataColumn("TrackingNum", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTrackingNum)
            Me.columnOrderRef1 = New DataColumn("OrderRef1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrderRef1)
            Me.columnOrderRef2 = New DataColumn("OrderRef2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrderRef2)
            Me.columnOrderStatus = New DataColumn("OrderStatus", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrderStatus)
            Me.columnStatusComment = New DataColumn("StatusComment", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnStatusComment)
            Me.columnOrderOrigin = New DataColumn("OrderOrigin", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrderOrigin)
            Me.columnCustomerID = New DataColumn("CustomerID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCustomerID)
            Me.columnCustomerPO = New DataColumn("CustomerPO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCustomerPO)
            Me.columnAuthorizedBy = New DataColumn("AuthorizedBy", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAuthorizedBy)
            Me.columnPULocationID = New DataColumn("PULocationID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPULocationID)
            Me.columnPUName = New DataColumn("PUName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUName)
            Me.columnPUStreet = New DataColumn("PUStreet", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUStreet)
            Me.columnPUAddress = New DataColumn("PUAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUAddress)
            Me.columnPUCity = New DataColumn("PUCity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUCity)
            Me.columnPUState = New DataColumn("PUState", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUState)
            Me.columnPUZip = New DataColumn("PUZip", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUZip)
            Me.columnPUContact = New DataColumn("PUContact", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUContact)
            Me.columnPUAttn = New DataColumn("PUAttn", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPUAttn)
            Me.columnPURef1 = New DataColumn("PURef1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPURef1)
            Me.columnPURef2 = New DataColumn("PURef2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPURef2)
            Me.columnDLLocationID = New DataColumn("DLLocationID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLLocationID)
            Me.columnDLName = New DataColumn("DLName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLName)
            Me.columnDLStreet = New DataColumn("DLStreet", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLStreet)
            Me.columnDLAddress = New DataColumn("DLAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLAddress)
            Me.columnDLCity = New DataColumn("DLCity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLCity)
            Me.columnDLState = New DataColumn("DLState", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLState)
            Me.columnDLZip = New DataColumn("DLZip", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLZip)
            Me.columnDLContact = New DataColumn("DLContact", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLContact)
            Me.columnDLAttn = New DataColumn("DLAttn", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLAttn)
            Me.columnDLRef1 = New DataColumn("DLRef1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLRef1)
            Me.columnDLRef2 = New DataColumn("DLRef2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDLRef2)
            Me.columnInsertUserId = New DataColumn("InsertUserId", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnInsertUserId)
            Me.columnUpdateUserId = New DataColumn("UpdateUserId", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUpdateUserId)
            Me.columnOrdersId.AllowDBNull = false
            Me.columnCourierLabelID.AllowDBNull = false
            Me.columnInvoice_No.AllowDBNull = false
            Me.columnPUAddressID.AllowDBNull = false
            Me.columnDLAddressID.AllowDBNull = false
            Me.columnCOD.AllowDBNull = false
            Me.columnFreightCollect.AllowDBNull = false
            Me.columnNeedPricing.AllowDBNull = false
            Me.columnOrderDate.AllowDBNull = false
            Me.columnPUDate.AllowDBNull = false
            Me.columnDLDate.AllowDBNull = false
            Me.columnInsertDate.AllowDBNull = false
            Me.columnUpdateDate.AllowDBNull = false
            Me.columnCODAmount.AllowDBNull = false
            Me.columnDeclaredValue.AllowDBNull = false
            Me.columnTrackingNum.AllowDBNull = false
            Me.columnOrderRef1.AllowDBNull = false
            Me.columnOrderRef2.AllowDBNull = false
            Me.columnOrderStatus.AllowDBNull = false
            Me.columnStatusComment.AllowDBNull = false
            Me.columnOrderOrigin.AllowDBNull = false
            Me.columnCustomerID.AllowDBNull = false
            Me.columnCustomerPO.AllowDBNull = false
            Me.columnAuthorizedBy.AllowDBNull = false
            Me.columnPULocationID.AllowDBNull = false
            Me.columnPUName.AllowDBNull = false
            Me.columnPUStreet.AllowDBNull = false
            Me.columnPUAddress.AllowDBNull = false
            Me.columnPUCity.AllowDBNull = false
            Me.columnPUState.AllowDBNull = false
            Me.columnPUZip.AllowDBNull = false
            Me.columnPUContact.AllowDBNull = false
            Me.columnPUAttn.AllowDBNull = false
            Me.columnPURef1.AllowDBNull = false
            Me.columnPURef2.AllowDBNull = false
            Me.columnDLLocationID.AllowDBNull = false
            Me.columnDLName.AllowDBNull = false
            Me.columnDLStreet.AllowDBNull = false
            Me.columnDLAddress.AllowDBNull = false
            Me.columnDLCity.AllowDBNull = false
            Me.columnDLState.AllowDBNull = false
            Me.columnDLZip.AllowDBNull = false
            Me.columnDLContact.AllowDBNull = false
            Me.columnDLAttn.AllowDBNull = false
            Me.columnDLRef1.AllowDBNull = false
            Me.columnDLRef2.AllowDBNull = false
            Me.columnInsertUserId.AllowDBNull = false
            Me.columnUpdateUserId.AllowDBNull = false
        End Sub
        
        Public Function NewOrdersRow() As OrdersRow
            Return CType(Me.NewRow,OrdersRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New OrdersRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(OrdersRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OrdersRowChangedEvent) Is Nothing) Then
                RaiseEvent OrdersRowChanged(Me, New OrdersRowChangeEvent(CType(e.Row,OrdersRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OrdersRowChangingEvent) Is Nothing) Then
                RaiseEvent OrdersRowChanging(Me, New OrdersRowChangeEvent(CType(e.Row,OrdersRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OrdersRowDeletedEvent) Is Nothing) Then
                RaiseEvent OrdersRowDeleted(Me, New OrdersRowChangeEvent(CType(e.Row,OrdersRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OrdersRowDeletingEvent) Is Nothing) Then
                RaiseEvent OrdersRowDeleting(Me, New OrdersRowChangeEvent(CType(e.Row,OrdersRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveOrdersRow(ByVal row As OrdersRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class OrdersRow
        Inherits DataRow
        
        Private tableOrders As OrdersDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableOrders = CType(Me.Table,OrdersDataTable)
        End Sub
        
        Public Property OrdersId As Integer
            Get
                Return CType(Me(Me.tableOrders.OrdersIdColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.OrdersIdColumn) = value
            End Set
        End Property
        
        Public Property CourierLabelID As Integer
            Get
                Return CType(Me(Me.tableOrders.CourierLabelIDColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.CourierLabelIDColumn) = value
            End Set
        End Property
        
        Public Property Invoice_No As Integer
            Get
                Return CType(Me(Me.tableOrders.Invoice_NoColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.Invoice_NoColumn) = value
            End Set
        End Property
        
        Public Property PUAddressID As Integer
            Get
                Return CType(Me(Me.tableOrders.PUAddressIDColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.PUAddressIDColumn) = value
            End Set
        End Property
        
        Public Property DLAddressID As Integer
            Get
                Return CType(Me(Me.tableOrders.DLAddressIDColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.DLAddressIDColumn) = value
            End Set
        End Property
        
        Public Property COD As Integer
            Get
                Return CType(Me(Me.tableOrders.CODColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.CODColumn) = value
            End Set
        End Property
        
        Public Property FreightCollect As Integer
            Get
                Return CType(Me(Me.tableOrders.FreightCollectColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.FreightCollectColumn) = value
            End Set
        End Property
        
        Public Property NeedPricing As Integer
            Get
                Return CType(Me(Me.tableOrders.NeedPricingColumn),Integer)
            End Get
            Set
                Me(Me.tableOrders.NeedPricingColumn) = value
            End Set
        End Property
        
        Public Property OrderDate As Date
            Get
                Return CType(Me(Me.tableOrders.OrderDateColumn),Date)
            End Get
            Set
                Me(Me.tableOrders.OrderDateColumn) = value
            End Set
        End Property
        
        Public Property PUDate As Date
            Get
                Return CType(Me(Me.tableOrders.PUDateColumn),Date)
            End Get
            Set
                Me(Me.tableOrders.PUDateColumn) = value
            End Set
        End Property
        
        Public Property DLDate As Date
            Get
                Return CType(Me(Me.tableOrders.DLDateColumn),Date)
            End Get
            Set
                Me(Me.tableOrders.DLDateColumn) = value
            End Set
        End Property
        
        Public Property InsertDate As Date
            Get
                Return CType(Me(Me.tableOrders.InsertDateColumn),Date)
            End Get
            Set
                Me(Me.tableOrders.InsertDateColumn) = value
            End Set
        End Property
        
        Public Property UpdateDate As Date
            Get
                Return CType(Me(Me.tableOrders.UpdateDateColumn),Date)
            End Get
            Set
                Me(Me.tableOrders.UpdateDateColumn) = value
            End Set
        End Property
        
        Public Property CODAmount As Decimal
            Get
                Return CType(Me(Me.tableOrders.CODAmountColumn),Decimal)
            End Get
            Set
                Me(Me.tableOrders.CODAmountColumn) = value
            End Set
        End Property
        
        Public Property DeclaredValue As Decimal
            Get
                Return CType(Me(Me.tableOrders.DeclaredValueColumn),Decimal)
            End Get
            Set
                Me(Me.tableOrders.DeclaredValueColumn) = value
            End Set
        End Property
        
        Public Property TrackingNum As String
            Get
                Return CType(Me(Me.tableOrders.TrackingNumColumn),String)
            End Get
            Set
                Me(Me.tableOrders.TrackingNumColumn) = value
            End Set
        End Property
        
        Public Property OrderRef1 As String
            Get
                Return CType(Me(Me.tableOrders.OrderRef1Column),String)
            End Get
            Set
                Me(Me.tableOrders.OrderRef1Column) = value
            End Set
        End Property
        
        Public Property OrderRef2 As String
            Get
                Return CType(Me(Me.tableOrders.OrderRef2Column),String)
            End Get
            Set
                Me(Me.tableOrders.OrderRef2Column) = value
            End Set
        End Property
        
        Public Property OrderStatus As String
            Get
                Return CType(Me(Me.tableOrders.OrderStatusColumn),String)
            End Get
            Set
                Me(Me.tableOrders.OrderStatusColumn) = value
            End Set
        End Property
        
        Public Property StatusComment As String
            Get
                Return CType(Me(Me.tableOrders.StatusCommentColumn),String)
            End Get
            Set
                Me(Me.tableOrders.StatusCommentColumn) = value
            End Set
        End Property
        
        Public Property OrderOrigin As String
            Get
                Return CType(Me(Me.tableOrders.OrderOriginColumn),String)
            End Get
            Set
                Me(Me.tableOrders.OrderOriginColumn) = value
            End Set
        End Property
        
        Public Property CustomerID As String
            Get
                Return CType(Me(Me.tableOrders.CustomerIDColumn),String)
            End Get
            Set
                Me(Me.tableOrders.CustomerIDColumn) = value
            End Set
        End Property
        
        Public Property CustomerPO As String
            Get
                Return CType(Me(Me.tableOrders.CustomerPOColumn),String)
            End Get
            Set
                Me(Me.tableOrders.CustomerPOColumn) = value
            End Set
        End Property
        
        Public Property AuthorizedBy As String
            Get
                Return CType(Me(Me.tableOrders.AuthorizedByColumn),String)
            End Get
            Set
                Me(Me.tableOrders.AuthorizedByColumn) = value
            End Set
        End Property
        
        Public Property PULocationID As String
            Get
                Return CType(Me(Me.tableOrders.PULocationIDColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PULocationIDColumn) = value
            End Set
        End Property
        
        Public Property PUName As String
            Get
                Return CType(Me(Me.tableOrders.PUNameColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUNameColumn) = value
            End Set
        End Property
        
        Public Property PUStreet As String
            Get
                Return CType(Me(Me.tableOrders.PUStreetColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUStreetColumn) = value
            End Set
        End Property
        
        Public Property PUAddress As String
            Get
                Return CType(Me(Me.tableOrders.PUAddressColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUAddressColumn) = value
            End Set
        End Property
        
        Public Property PUCity As String
            Get
                Return CType(Me(Me.tableOrders.PUCityColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUCityColumn) = value
            End Set
        End Property
        
        Public Property PUState As String
            Get
                Return CType(Me(Me.tableOrders.PUStateColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUStateColumn) = value
            End Set
        End Property
        
        Public Property PUZip As String
            Get
                Return CType(Me(Me.tableOrders.PUZipColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUZipColumn) = value
            End Set
        End Property
        
        Public Property PUContact As String
            Get
                Return CType(Me(Me.tableOrders.PUContactColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUContactColumn) = value
            End Set
        End Property
        
        Public Property PUAttn As String
            Get
                Return CType(Me(Me.tableOrders.PUAttnColumn),String)
            End Get
            Set
                Me(Me.tableOrders.PUAttnColumn) = value
            End Set
        End Property
        
        Public Property PURef1 As String
            Get
                Return CType(Me(Me.tableOrders.PURef1Column),String)
            End Get
            Set
                Me(Me.tableOrders.PURef1Column) = value
            End Set
        End Property
        
        Public Property PURef2 As String
            Get
                Return CType(Me(Me.tableOrders.PURef2Column),String)
            End Get
            Set
                Me(Me.tableOrders.PURef2Column) = value
            End Set
        End Property
        
        Public Property DLLocationID As String
            Get
                Return CType(Me(Me.tableOrders.DLLocationIDColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLLocationIDColumn) = value
            End Set
        End Property
        
        Public Property DLName As String
            Get
                Return CType(Me(Me.tableOrders.DLNameColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLNameColumn) = value
            End Set
        End Property
        
        Public Property DLStreet As String
            Get
                Return CType(Me(Me.tableOrders.DLStreetColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLStreetColumn) = value
            End Set
        End Property
        
        Public Property DLAddress As String
            Get
                Return CType(Me(Me.tableOrders.DLAddressColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLAddressColumn) = value
            End Set
        End Property
        
        Public Property DLCity As String
            Get
                Return CType(Me(Me.tableOrders.DLCityColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLCityColumn) = value
            End Set
        End Property
        
        Public Property DLState As String
            Get
                Return CType(Me(Me.tableOrders.DLStateColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLStateColumn) = value
            End Set
        End Property
        
        Public Property DLZip As String
            Get
                Return CType(Me(Me.tableOrders.DLZipColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLZipColumn) = value
            End Set
        End Property
        
        Public Property DLContact As String
            Get
                Return CType(Me(Me.tableOrders.DLContactColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLContactColumn) = value
            End Set
        End Property
        
        Public Property DLAttn As String
            Get
                Return CType(Me(Me.tableOrders.DLAttnColumn),String)
            End Get
            Set
                Me(Me.tableOrders.DLAttnColumn) = value
            End Set
        End Property
        
        Public Property DLRef1 As String
            Get
                Return CType(Me(Me.tableOrders.DLRef1Column),String)
            End Get
            Set
                Me(Me.tableOrders.DLRef1Column) = value
            End Set
        End Property
        
        Public Property DLRef2 As String
            Get
                Return CType(Me(Me.tableOrders.DLRef2Column),String)
            End Get
            Set
                Me(Me.tableOrders.DLRef2Column) = value
            End Set
        End Property
        
        Public Property InsertUserId As String
            Get
                Return CType(Me(Me.tableOrders.InsertUserIdColumn),String)
            End Get
            Set
                Me(Me.tableOrders.InsertUserIdColumn) = value
            End Set
        End Property
        
        Public Property UpdateUserId As String
            Get
                Return CType(Me(Me.tableOrders.UpdateUserIdColumn),String)
            End Get
            Set
                Me(Me.tableOrders.UpdateUserIdColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class OrdersRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As OrdersRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As OrdersRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As OrdersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
